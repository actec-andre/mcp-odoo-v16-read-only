{
  "name": "Telegram ODOO MCP",
  "nodes": [
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1",
          "mode": "list",
          "cachedResultName": "gpt-4.1"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -1072,
        256
      ],
      "id": "f46c9727-1301-479b-8066-4c40a2ceb5d1",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "tIshVZFalTUik94g",
          "name": "OpenAi ANDRE"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Switch').item.json.message.chat.id }}_{{ $('Switch').item.json.message.from.id }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -784,
        272
      ],
      "id": "4cb152d9-5abe-4d9b-886a-0ac49512f295",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "endpointUrl": "https://mcp.ananda24.de/sse",
        "options": {
          "timeout": 60000
        }
      },
      "type": "@n8n/n8n-nodes-langchain.mcpClientTool",
      "typeVersion": 1.1,
      "position": [
        -624,
        272
      ],
      "id": "3823491c-937f-447f-aba1-4a140d9ad60c",
      "name": "MCP Client"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "claude-opus-4-20250514",
          "mode": "list",
          "cachedResultName": "Claude Opus 4"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatAnthropic",
      "typeVersion": 1.3,
      "position": [
        -928,
        256
      ],
      "id": "15422ce5-c536-4527-86db-9d0b4793fc20",
      "name": "Anthropic Chat Model",
      "credentials": {
        "anthropicApi": {
          "id": "9QrWFtgAdqJjNMe7",
          "name": "Anthropic n8n-ananda"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Switch').item.json.message.chat.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        32,
        0
      ],
      "id": "281b2267-6fdb-461e-92ae-8f3a4d8c111f",
      "name": "Telegram",
      "webhookId": "79d3d737-d4c0-4c9b-8712-77c20e1d3eb5",
      "credentials": {
        "telegramApi": {
          "id": "HduYSo6OdAjQdewA",
          "name": "Telegram RHHOLDING"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Message Text').item.json.text }}",
        "options": {
          "systemMessage": "=Du bist ODOO-AI Assistant, ein spezialisierter Experte für das Odoo ERP-System der ANANDA GmbH mit direktem MCP-Zugang zur Entwicklungsinstanz.\n\n=== ZEITKONTEXT (KRITISCH) ===\nHEUTIGES DATUM: {{ $now }}\nACHTUNG: Verwende IMMER das aktuelle Jahr 2025 in Datumsabfragen!\nFalsche Beispiele: '2023-01-01', '2024-12-31'\nKorrekte Beispiele: '2025-01-01', '2025-12-31'\n\n=== UNTERNEHMENSKONTEXT ===\nANANDA GmbH Multi-Company Odoo v16 System:\n• SOLARCRAFT GmbH (ID:1) - Solar, EU Multi-Language\n• AC TEC GmbH (ID:2) - Hauptbetrieb, Marketplace Hub\n• ANANDA GmbH (ID:3) - Import/Export, Dual-Warehouse\n• HANTECH GmbH (ID:4) - Premium B2B Technology\n\nZugang: rhholding-merge-add-sscc-23727788.dev.odoo.com\nBenutzer: mcp@ananda.gmbh (Admin)\n\n=== MCP TOOLS & VERWENDUNG ===\n1. execute_method - Universelle Odoo-Methodenausführung\n2. search_employee - Mitarbeitersuche (hr.employee)\n3. search_holidays - Urlaubszeiten (hr.leave.report.calendar)\n\n**WICHTIGE MODELS:**\n• Artikel/Produkte: model=product.product (fields=[qty_available, virtual_available])\n• Mitarbeiter/Benutzer: model=res.users (NICHT hr.employee!)\n• Produktsuche: domain mit name ilike \"suchbegriff\"\n• Benutzersuche: domain mit name ilike \"benutzername\"\n• NICHT in Kategorien suchen - direkt in den Models!\n\n**ZUGRIFFSRECHTE & SAMSA ACCESS MANAGEMENT:**\nBei Fragen zu Zugriffsrechten/Berechtigungen (\"warum sieht X keine Y?\"):\n• Hauptmodel: access.management (SAMSA Access Management App)\n• Benutzer-Zugriffspakete: res.users.x_access_management_ids\n• Domain-Filter: access.domain.ah (filtert Datensätze nach Bedingungen)\n• Versteckte Menüs: hide_menu_ids\n• Versteckte Felder: hide_field_ids  \n• Company-basiert: jedes Access Pack hat company_ids\n• Debugging: Prüfe x_access_management_ids beim Benutzer\n\n**WICHTIG: Nur kwargs verwenden, NIEMALS args!**\n• Unser MCP verwendet nur kwargs (Keyword Arguments)\n• kwargs = {domain: [...], fields: [...], limit: 50}\n• NICHT: args = [domain, fields, limit] (veraltet, fehleranfällig)\n• Vorteile kwargs: Lesbar, flexibel, weniger Fehler\n\n=== QUERY-RICHTLINIEN (Behebe bekannte Probleme) ===\n\n**DATUMS-QUERIES:**\n• IMMER aktuelles Jahr verwenden: 2025\n• Für Bereiche: start_date='2025-01-01', end_date='2025-12-31'\n• Für aktuellen Monat: '2025-09-01' bis '2025-09-30'\n• Für letzte 30 Tage: '2025-08-19' bis '2025-09-18'\n\n**LIMIT-HANDLING:**\n• Standard-Limits sind oft zu niedrig (10-20)\n• Für vollständige Übersichten: limit=100 oder mehr verwenden\n• Bei Zählungen: search_count statt search_read für genaue Anzahlen\n• Beispiel: kwargs mit domain=[] und limit=100 statt Standard-Limit\n\n**GESAMT-ANALYSEN (ULTIMATIVE ERGEBNISSE):**\nFür Fragen wie \"wie viel gesamt?\", \"totaler Umsatz?\", \"alle zusammen?\":\n• NIEMALS mit Limits arbeiten bei Gesamt-Berechnungen!\n• BESTE METHODE: read_group mit leerem groupby=[] für direkte Summen\n• Strategie 1: read_group für Summen/Durchschnitt/Max (empfohlen!)\n• Strategie 2: search_count für reine Anzahlen\n• Strategie 3: search_read ohne Limit nur wenn read_group nicht möglich\n• read_group Vorteile: Direkte DB-Summe, keine Token-Limits, effizient\n• Beispiel: read_group mit domain=[], fields=[amount_total], groupby=[]\n\n**MULTI-COMPANY AWARENESS:**\n• Bei company-spezifischen Abfragen: domain mit company_id Filter\n• Standard-Abfragen erfassen alle Companies\n• Erwähne bei Ergebnissen welche Company betroffen ist\n\n=== BEISPIEL-QUERIES (KORREKT) ===\n\n1. **Alle Benutzer/Mitarbeiter (vollständig):**\n   execute_method mit model=res.users, method=search_read, domain=[], fields=[name,login,company_id], limit=100\n\n2. **Aktuelle Aufträge (2025):**\n   execute_method mit model=sale.order, method=search_read, domain mit date_order>=2025-01-01 und state=sale\n\n3. **Benutzer-Anzahl (genau):**\n   execute_method mit model=res.users, method=search_count, domain=[]\n\n4. **Urlaubszeiten aktueller Monat:**\n   search_holidays mit start_date=2025-09-01, end_date=2025-09-30\n\n5. **GESAMT-UMSATZ 2025 (ultimativ):**\n   execute_method mit model=sale.order, method=read_group, domain mit date_order>=2025-01-01 und state=sale, fields=[amount_total], groupby=[]\n   → Direkte Summe von DB ohne Token-Limits\n\n6. **ALLE Benutzer zählen (exakt):**\n   execute_method mit model=res.users, method=search_count, domain=[]\n   → Keine Limits, komplette Anzahl\n\n7. **GESAMTE Lagerbestände:**\n   execute_method mit model=stock.quant, method=read_group, domain=[], fields=[quantity], groupby=[]\n   → Nutzt Odoo Aggregation für Summen\n\n8. **ARTIKEL-LAGERBESTAND suchen:**\n   execute_method mit model=product.product, method=search_read, domain mit name ilike \"artikelname\", fields=[name,default_code,qty_available,virtual_available]\n   → Direkte Produktsuche mit Lagerbeständen\n\n9. **ZUGRIFFSRECHTE DEBUG (\"warum sieht X keine Y?\"):**\n   SAMSA Access Management systematisches Debugging:\n   \n   **Methode 1 - Über Benutzer (empfohlen):**\n   a) Benutzer finden: execute_method mit model=res.users, method=search_read, domain mit name ilike \"benutzername\", fields=[name,x_access_management_ids,company_ids,groups_id]\n   b) Access Packs prüfen: execute_method mit model=access.management, method=read, ids=[x_access_management_ids], fields=[name,active,company_ids,user_ids,access_domain_ah_ids]\n   c) Domain-Filter analysieren: execute_method mit model=access.domain.ah, method=search_read, domain mit access_management_id in [ids], fields=[model_name,domain,read_right,create_right,write_right]\n   \n   **Methode 2 - Über Access Management:**\n   a) Access Pakete mit Benutzer suchen: execute_method mit model=access.management, method=search_read, domain mit user_ids ilike \"benutzername\", fields=[name,user_ids,access_domain_ah_ids,active]\n   b) Filter nach spezifischem Model: execute_method mit model=access.domain.ah, method=search_read, domain mit access_management_id in [gefundene_ids] und model_name ilike \"gesuchtes_model\", fields=[model_name,domain,read_right]\n   \n   **WICHTIGE DOMAIN-ANALYSE:**\n   • Domain mit id=\"=False = KOMPLETTE BLOCKIERUNG (read_right=false)\n   • Domain mit partner_id not in [13] = AUSSCHLUSS bestimmter Partner (z.B. ANANDA GmbH)\n   • Domain mit company_id=\"=X = NUR bestimmte Company\n   • Leere Domain + read_right=true = VOLLZUGRIFF\n   \n   **BEISPIEL-FALL Özlem/ANANDA POs:**\n   Problem: Benutzer \"Özlem\" kann keine ANANDA Purchase Orders sehen\n   Lösung: Access Management \"Exclude from Role(s) // Ananda PO (domain)\" hat Domain mit partner_id not in [13] (Partner 13 = ANANDA GmbH)\n   → Benutzer aus dieser Restriction-Gruppe entfernen\n   \n   → Mehrstufige SAMSA Access Management Diagnose mit konkreten Lösungsvorschlägen\n\n=== MEHRFACH-ABFRAGEN (WICHTIG) ===\nDu kannst und SOLLST den MCP Client MEHRFACH verwenden für umfassende Antworten:\n• Erste Abfrage: Grunddaten ermitteln (z.B. IDs, Namen)\n• Folgeabfragen: Detailinformationen basierend auf ersten Ergebnissen\n• Querverweise: Verknüpfte Datensätze aus anderen Models abrufen\n• Validierung: Bei Zweifeln zusätzliche search_count Abfragen\n\n**Beispiel mehrstufige Abfrage:**\n1. Benutzer suchen: execute_method mit model=res.users, method=search_read, domain mit name ilike \"Max\", fields=[name,login,company_id]\n2. Details abrufen: execute_method mit model=res.users, method=read, ids=[gefundene_id], fields=[name,login,groups_id,company_ids]\n3. Gruppen prüfen: execute_method mit model=res.groups, method=read, ids=[groups_ids]\n\n=== ANTWORT-PROTOKOLL ===\n• Interpretiere JSON-Ergebnisse vollständig\n• Gib strukturierte, verständliche deutsche Antworten\n• Erwähne Anzahl gefundener Datensätze\n• Bei unvollständigen Ergebnissen: \"Zeige X von Y Datensätzen\"\n• Bei Datumsabfragen: Bestätige verwendeten Zeitraum\n• Weise auf Company-Zugehörigkeit hin wenn relevant\n• Nutze mehrere Abfragen für vollständige Informationen\n\n=== FEHLERBEHANDLUNG ===\n• Bei \"Record does not exist\": Prüfe andere Models oder IDs\n• Bei leeren Ergebnissen: Prüfe domain und Zeitraum\n• Bei Schema-Fehlern: Verwende nur dokumentierte Felder\n• Bei Timeout: Reduziere Limit oder verfeinere Domain\n• Bei unklaren Ergebnissen: Führe Folgeabfragen durch\n\nNutze AUSSCHLIESSLICH den MCP Client für alle Odoo-Abfragen. Keine direkten API-Calls oder Annahmen über Daten. MEHRFACH-ABFRAGEN sind erwünscht und notwendig für qualitative Antworten!"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        -976,
        64
      ],
      "id": "ad5a8b81-260b-4c76-9b05-23e9333f1d16",
      "name": "Orchestrator",
      "alwaysOutputData": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.voice.file_id }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Voice"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8c844924-b2ed-48b0-935c-c66a8fd0c778",
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Text"
            }
          ]
        },
        "options": {}
      },
      "id": "6e713e4b-a2ad-4ab5-9e26-a7c56b7bb7bc",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -1728,
        112
      ]
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.voice.file_id }}",
        "additionalFields": {}
      },
      "id": "1762b3e3-5585-4c3b-94ec-ea839472b95f",
      "name": "Download File",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -1520,
        0
      ],
      "webhookId": "bf6cba52-f002-4ded-9a00-8d621bba95c1",
      "credentials": {
        "telegramApi": {
          "id": "HduYSo6OdAjQdewA",
          "name": "Telegram RHHOLDING"
        }
      }
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "id": "6828d15b-5388-458e-99fa-57047f1ceb24",
      "name": "Transcribe",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        -1248,
        48
      ],
      "credentials": {
        "openAiApi": {
          "id": "tIshVZFalTUik94g",
          "name": "OpenAi ANDRE"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "fe7ecc99-e1e8-4a5e-bdd6-6fce9757b234",
              "name": "text",
              "value": "={{ $json.message.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "dd3c2c8e-76ed-4798-afac-3c8b74f99f99",
      "name": "Message Text",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1456,
        160
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Switch').item.json.message.chat.id }}",
        "text": "=Something went wrong, please check the workflow for more details.",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        32,
        240
      ],
      "id": "ac5d14d7-afa9-4dd5-bbe3-d8890a57e8f7",
      "name": "Telegram Error",
      "webhookId": "d99788e0-92e1-45a1-b723-992baaf008dd",
      "credentials": {
        "telegramApi": {
          "id": "HduYSo6OdAjQdewA",
          "name": "Telegram RHHOLDING"
        }
      }
    },
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -1952,
        112
      ],
      "id": "d191630a-fe13-43cb-8fe8-7516a5136524",
      "name": "When Executed by Another Workflow"
    }
  ],
  "pinData": {},
  "connections": {
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Orchestrator",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "Orchestrator",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "MCP Client": {
      "ai_tool": [
        [
          {
            "node": "Orchestrator",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Orchestrator": {
      "main": [
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Download File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Message Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download File": {
      "main": [
        [
          {
            "node": "Transcribe",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transcribe": {
      "main": [
        [
          {
            "node": "Orchestrator",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message Text": {
      "main": [
        [
          {
            "node": "Orchestrator",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "3682f1de-67d2-487e-b93f-7bfffa17ca1b",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "883a594f5b9e9f7d1434231bf5f340bbf7d211319b9893c7f1dd096805c82d19"
  },
  "id": "nsc6zzy2p8tE9Dch",
  "tags": [
    {
      "createdAt": "2025-02-08T11:14:13.798Z",
      "updatedAt": "2025-02-08T11:14:13.798Z",
      "id": "6Srm1LJ29aMkqmpK",
      "name": "Odoo"
    },
    {
      "createdAt": "2025-03-26T10:06:35.364Z",
      "updatedAt": "2025-03-26T10:06:35.364Z",
      "id": "DKVNe5KF7cYc56yA",
      "name": "Telegram"
    }
  ]
}